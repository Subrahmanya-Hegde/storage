plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.5'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'org.openapi.generator' version '7.5.0'
}

group = 'com.hegde'
version = '0.0.1-SNAPSHOT'

java.sourceCompatibility = '17'
java.targetCompatibility = '17'

bootRun {
    environment SPRING_PROFILES_ACTIVE: environment.SPRING_PROFILES_ACTIVE ?: 'local'
}

//Since Open API auto generates the code and it also contains the main function. Provide main class here.
springBoot {
    mainClass = 'com.hegde.storage.StorageApplication'
}

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    implementation('org.springframework.boot:spring-boot-starter')
    implementation('org.springframework.boot:spring-boot-actuator')
    implementation('org.springframework.boot:spring-boot-starter-webflux')
//    implementation('org.springframework.boot:spring-boot-starter-validation')
    implementation('org.springframework.boot:spring-boot-starter-data-mongodb')
    implementation('io.github.wimdeblauwe:error-handling-spring-boot-starter:4.2.0')
    implementation('org.springframework.boot:spring-boot-starter-data-mongodb-reactive')

    //Open API and supportive dependencies.
    implementation group: 'org.springdoc', name: 'springdoc-openapi-starter-webflux-ui', version: '2.1.0'
    implementation group: 'org.openapitools', name: 'jackson-databind-nullable', version: '0.2.6'
    implementation group: 'jakarta.annotation', name: 'jakarta.annotation-api', version: '2.1.1'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation', version: '3.2.5'

    compileOnly('org.projectlombok:lombok')
    annotationProcessor('org.projectlombok:lombok')
    testCompileOnly('org.projectlombok:lombok')
    testAnnotationProcessor('org.projectlombok:lombok')
    developmentOnly('org.springframework.boot:spring-boot-devtools')
    developmentOnly('org.springframework.boot:spring-boot-docker-compose')
    testImplementation('org.springframework.boot:spring-boot-starter-test')
    testImplementation('io.rest-assured:rest-assured')
}

tasks.withType(Test) {
    useJUnitPlatform()
}

//Make the open api generated folder as source.
sourceSets {
    main {
        java {
            srcDir("$buildDir/generated/src/main/java")
        }
        resources {
            srcDir("$buildDir(/generated/src/main/resources)")
        }
    }
}

openApiGenerate {
    generatorName.set("spring")
    inputSpec.set("$projectDir/src/main/resources/contracts/storage-v0.yaml")
    outputDir.set("$buildDir/generated")
    apiPackage.set("com.hegde.storage.api")
    modelPackage.set("com.hegde.storage.model")
    configOptions.set([
            library: "spring-boot",
            documentationProvider: "springdoc",
            delegatePattern: "true",
            reactive: "true",
            serializableModel: "true",
            useOptional: "true",
            useTags: "true",
            useBeanValidation: "true", //Bean validations.
            performBeanValidation: "false",
            legacyDiscriminatorBehavior: "false",
            useJakartaEe: "true", //Javax is deprecated after 3.x spring boot versions. And is moved to Jakarta
            useSpringBoot3: "true" //This is also needed for using the jakarta libraries.
    ])
}

compileJava.dependsOn tasks.named("openApiGenerate")
